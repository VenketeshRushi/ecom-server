// schema.prisma

generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id       Int      @id @default(autoincrement())
  email    String   @unique
  password String   
  firstName String?
  lastName  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  addresses Address[]
  orders    Order[]
  CartProducts CartProduct[]
  favoriteItems Favorite[]
  isAdmin   Boolean @default(false)
}

model Address {
  id        Int      @id @default(autoincrement())
  street    String
  city      String
  state     String
  zipCode   String
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
}

model Product {
  id          Int      @id @default(autoincrement())
  title       String
  gender      String
  description String
  category    String
  price       Int
  size        String[]
  color       String
  ratings     Json
  img         String[]
}


model CartProduct {
  cartProductId Int      @id @default(autoincrement())
  id          Int     
  title       String
  gender      String
  description String
  category    String
  price       Float
  size        String
  color       String
  ratings      Json
  img         String[]
  quantity    Int
  user        User      @relation(fields: [userId], references: [id])
  userId      Int       
}

model Favorite {
  favoriteId Int   @id @default(autoincrement())
  id          Int
  title       String
  gender      String
  description String
  category    String
  price       Float
  size        String[]
  color       String
  ratings      Json
  img         String[]
  user        User @relation(fields: [userId], references: [id])
  userId      Int  
  createdAt   DateTime @default(now())
}

model Order {
  id              Int       @id @default(autoincrement())
  subTotal        Float
  quantity        Int
  shipping        Float
  discount        Float
  total           Float
  user            User      @relation(fields: [userId], references: [id])
  userId          Int
  createdAt       DateTime @default(now())
  PaymentDetails  PaymentDetail[]
  ShippingDetails ShippingDetail[]
  OrderedProducts OrderedProduct[]
}

model OrderedProduct{
  OrderedProductId Int      @id @default(autoincrement())
  id          Int     
  title       String
  gender      String
  description String
  category    String
  price       Float
  size        String
  color       String
  ratings     Json
  img         String[]
  quantity    Int
  order       Order?    @relation(fields: [orderId], references: [id])
  orderId     Int?
}

model PaymentDetail {
  id               Int       @id @default(autoincrement())
  razorpayOrderId  String
  razorpayPaymentId String
  order            Order?    @relation(fields: [orderId], references: [id])
  orderId          Int?
}

model ShippingDetail {
  id           Int       @id @default(autoincrement())
  firstName    String
  lastName     String
  addressLine1 String
  addressLine2 String?
  locality     String
  pinCode      String
  state        String
  country      String
  email        String
  mobile       String
  order        Order?    @relation(fields: [orderId], references: [id])
  orderId      Int?
}
